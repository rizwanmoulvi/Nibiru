"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.perp = exports.GQLPerpQueryString = void 0;
const __1 = require("..");
const GQLPerpQueryString = (args, fields) => {
    var _a, _b, _c;
    const GQLPerpQuery = [];
    if (fields === null || fields === void 0 ? void 0 : fields.leaderboard) {
        GQLPerpQuery.push((0, __1.gqlQuery)("leaderboard", (_a = args.leaderboard) !== null && _a !== void 0 ? _a : {}, (0, __1.convertObjectToPropertiesString)(fields.leaderboard), true));
    }
    // Note: args.market must be defined
    if (args.market && (fields === null || fields === void 0 ? void 0 : fields.market)) {
        GQLPerpQuery.push((0, __1.gqlQuery)("market", args.market, (0, __1.convertObjectToPropertiesString)(fields.market), true));
    }
    if (fields === null || fields === void 0 ? void 0 : fields.markets) {
        GQLPerpQuery.push((0, __1.gqlQuery)("markets", (_b = args.markets) !== null && _b !== void 0 ? _b : {}, (0, __1.convertObjectToPropertiesString)(fields.markets), true));
    }
    // Note: args.position must be defined
    if (args.position && (fields === null || fields === void 0 ? void 0 : fields.position)) {
        GQLPerpQuery.push((0, __1.gqlQuery)("position", args.position, (0, __1.convertObjectToPropertiesString)(fields.position), true));
    }
    // Note: args.positionChanges must be defined
    if (args.positionChanges && (fields === null || fields === void 0 ? void 0 : fields.positionChanges)) {
        GQLPerpQuery.push((0, __1.gqlQuery)("positionChanges", args.positionChanges, (0, __1.convertObjectToPropertiesString)(fields.positionChanges), true));
    }
    if (fields === null || fields === void 0 ? void 0 : fields.positions) {
        GQLPerpQuery.push((0, __1.gqlQuery)("positions", (_c = args.positions) !== null && _c !== void 0 ? _c : {}, (0, __1.convertObjectToPropertiesString)(fields.positions), true));
    }
    return `
      perp {
        ${GQLPerpQuery.join("\n")}
      }
    `;
};
exports.GQLPerpQueryString = GQLPerpQueryString;
const perp = (args, endpt, fields) => __awaiter(void 0, void 0, void 0, function* () {
    return (0, __1.doGqlQuery)(`{
      ${(0, exports.GQLPerpQueryString)(args, fields)}
    }`, endpt);
});
exports.perp = perp;
//# sourceMappingURL=perp.js.map