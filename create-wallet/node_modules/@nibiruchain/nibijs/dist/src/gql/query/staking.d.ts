import { DeepPartial, GQLDelegation, GQLQuery, GQLQueryGqlRedelegationsArgs, GQLQueryGqlUnbondingsArgs, GQLRedelegation, GQLStakingGqlDelegationsArgs, GQLStakingGqlHistoryArgs, GQLStakingGqlValidatorsArgs, GQLStakingHistoryItem, GQLUnbonding, GQLValidator } from "../utils";
export type QueryStakingArgs = {
    delegations?: GQLStakingGqlDelegationsArgs;
    history?: GQLStakingGqlHistoryArgs;
    redelegations?: GQLQueryGqlRedelegationsArgs;
    unbondings?: GQLQueryGqlUnbondingsArgs;
    validators?: GQLStakingGqlValidatorsArgs;
};
export interface GqlOutStaking {
    staking?: GQLQuery["staking"];
}
export type GQLStakingFields = DeepPartial<{
    delegations?: DeepPartial<GQLDelegation>;
    history?: DeepPartial<GQLStakingHistoryItem>;
    redelegations?: DeepPartial<GQLRedelegation>;
    unbondings?: DeepPartial<GQLUnbonding>;
    validators?: DeepPartial<GQLValidator>;
}>;
export declare const GQLStakingQueryString: (args: QueryStakingArgs, fields?: GQLStakingFields) => string;
export declare const staking: (args: QueryStakingArgs, endpt: string, fields?: GQLStakingFields) => Promise<GqlOutStaking>;
//# sourceMappingURL=staking.d.ts.map