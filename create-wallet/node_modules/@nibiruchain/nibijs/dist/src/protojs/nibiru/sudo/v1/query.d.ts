import _m0 from "protobufjs/minimal";
import { Sudoers } from "./state";
export interface QuerySudoersRequest {
}
/** QuerySudoersResponse indicates the successful execution of MsgEditSudeors. */
export interface QuerySudoersResponse {
    sudoers?: Sudoers;
}
export declare const QuerySudoersRequest: {
    encode(_: QuerySudoersRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QuerySudoersRequest;
    fromJSON(_: any): QuerySudoersRequest;
    toJSON(_: QuerySudoersRequest): unknown;
    create<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(base?: I | undefined): QuerySudoersRequest;
    fromPartial<I_1 extends {} & {} & { [K_1 in Exclude<keyof I_1, never>]: never; }>(_: I_1): QuerySudoersRequest;
};
export declare const QuerySudoersResponse: {
    encode(message: QuerySudoersResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QuerySudoersResponse;
    fromJSON(object: any): QuerySudoersResponse;
    toJSON(message: QuerySudoersResponse): unknown;
    create<I extends {
        sudoers?: {
            root?: string | undefined;
            contracts?: string[] | undefined;
        } | undefined;
    } & {
        sudoers?: ({
            root?: string | undefined;
            contracts?: string[] | undefined;
        } & {
            root?: string | undefined;
            contracts?: (string[] & string[] & { [K in Exclude<keyof I["sudoers"]["contracts"], keyof string[]>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["sudoers"], keyof Sudoers>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "sudoers">]: never; }>(base?: I | undefined): QuerySudoersResponse;
    fromPartial<I_1 extends {
        sudoers?: {
            root?: string | undefined;
            contracts?: string[] | undefined;
        } | undefined;
    } & {
        sudoers?: ({
            root?: string | undefined;
            contracts?: string[] | undefined;
        } & {
            root?: string | undefined;
            contracts?: (string[] & string[] & { [K_3 in Exclude<keyof I_1["sudoers"]["contracts"], keyof string[]>]: never; }) | undefined;
        } & { [K_4 in Exclude<keyof I_1["sudoers"], keyof Sudoers>]: never; }) | undefined;
    } & { [K_5 in Exclude<keyof I_1, "sudoers">]: never; }>(object: I_1): QuerySudoersResponse;
};
/** Query defines the gRPC querier service. */
export interface Query {
    QuerySudoers(request: QuerySudoersRequest): Promise<QuerySudoersResponse>;
}
export declare const QueryServiceName = "nibiru.sudo.v1.Query";
export declare class QueryClientImpl implements Query {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    QuerySudoers(request: QuerySudoersRequest): Promise<QuerySudoersResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=query.d.ts.map