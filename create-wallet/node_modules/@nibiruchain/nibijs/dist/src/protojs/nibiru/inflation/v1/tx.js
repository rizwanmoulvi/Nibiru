"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgBurnResponse = exports.MsgBurn = exports.MsgEditInflationParamsResponse = exports.MsgToggleInflationResponse = exports.MsgEditInflationParams = exports.MsgToggleInflation = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const coin_1 = require("../../../cosmos/base/v1beta1/coin");
const inflation_1 = require("./inflation");
function createBaseMsgToggleInflation() {
    return { sender: "", enable: false };
}
exports.MsgToggleInflation = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.sender !== "") {
            writer.uint32(10).string(message.sender);
        }
        if (message.enable === true) {
            writer.uint32(16).bool(message.enable);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgToggleInflation();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.sender = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.enable = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            sender: isSet(object.sender) ? String(object.sender) : "",
            enable: isSet(object.enable) ? Boolean(object.enable) : false,
        };
    },
    toJSON(message) {
        const obj = {};
        message.sender !== undefined && (obj.sender = message.sender);
        message.enable !== undefined && (obj.enable = message.enable);
        return obj;
    },
    create(base) {
        return exports.MsgToggleInflation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseMsgToggleInflation();
        message.sender = (_a = object.sender) !== null && _a !== void 0 ? _a : "";
        message.enable = (_b = object.enable) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseMsgEditInflationParams() {
    return {
        sender: "",
        inflationEnabled: false,
        polynomialFactors: [],
        inflationDistribution: undefined,
        epochsPerPeriod: "",
        periodsPerYear: "",
        maxPeriod: "",
    };
}
exports.MsgEditInflationParams = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.sender !== "") {
            writer.uint32(10).string(message.sender);
        }
        if (message.inflationEnabled === true) {
            writer.uint32(16).bool(message.inflationEnabled);
        }
        for (const v of message.polynomialFactors) {
            writer.uint32(26).string(v);
        }
        if (message.inflationDistribution !== undefined) {
            inflation_1.InflationDistribution.encode(message.inflationDistribution, writer.uint32(34).fork()).ldelim();
        }
        if (message.epochsPerPeriod !== "") {
            writer.uint32(42).string(message.epochsPerPeriod);
        }
        if (message.periodsPerYear !== "") {
            writer.uint32(50).string(message.periodsPerYear);
        }
        if (message.maxPeriod !== "") {
            writer.uint32(58).string(message.maxPeriod);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgEditInflationParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.sender = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.inflationEnabled = reader.bool();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.polynomialFactors.push(reader.string());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.inflationDistribution = inflation_1.InflationDistribution.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.epochsPerPeriod = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.periodsPerYear = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.maxPeriod = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            sender: isSet(object.sender) ? String(object.sender) : "",
            inflationEnabled: isSet(object.inflationEnabled) ? Boolean(object.inflationEnabled) : false,
            polynomialFactors: Array.isArray(object === null || object === void 0 ? void 0 : object.polynomialFactors)
                ? object.polynomialFactors.map((e) => String(e))
                : [],
            inflationDistribution: isSet(object.inflationDistribution)
                ? inflation_1.InflationDistribution.fromJSON(object.inflationDistribution)
                : undefined,
            epochsPerPeriod: isSet(object.epochsPerPeriod) ? String(object.epochsPerPeriod) : "",
            periodsPerYear: isSet(object.periodsPerYear) ? String(object.periodsPerYear) : "",
            maxPeriod: isSet(object.maxPeriod) ? String(object.maxPeriod) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        message.sender !== undefined && (obj.sender = message.sender);
        message.inflationEnabled !== undefined && (obj.inflationEnabled = message.inflationEnabled);
        if (message.polynomialFactors) {
            obj.polynomialFactors = message.polynomialFactors.map((e) => e);
        }
        else {
            obj.polynomialFactors = [];
        }
        message.inflationDistribution !== undefined && (obj.inflationDistribution = message.inflationDistribution
            ? inflation_1.InflationDistribution.toJSON(message.inflationDistribution)
            : undefined);
        message.epochsPerPeriod !== undefined && (obj.epochsPerPeriod = message.epochsPerPeriod);
        message.periodsPerYear !== undefined && (obj.periodsPerYear = message.periodsPerYear);
        message.maxPeriod !== undefined && (obj.maxPeriod = message.maxPeriod);
        return obj;
    },
    create(base) {
        return exports.MsgEditInflationParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f;
        const message = createBaseMsgEditInflationParams();
        message.sender = (_a = object.sender) !== null && _a !== void 0 ? _a : "";
        message.inflationEnabled = (_b = object.inflationEnabled) !== null && _b !== void 0 ? _b : false;
        message.polynomialFactors = ((_c = object.polynomialFactors) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];
        message.inflationDistribution =
            (object.inflationDistribution !== undefined && object.inflationDistribution !== null)
                ? inflation_1.InflationDistribution.fromPartial(object.inflationDistribution)
                : undefined;
        message.epochsPerPeriod = (_d = object.epochsPerPeriod) !== null && _d !== void 0 ? _d : "";
        message.periodsPerYear = (_e = object.periodsPerYear) !== null && _e !== void 0 ? _e : "";
        message.maxPeriod = (_f = object.maxPeriod) !== null && _f !== void 0 ? _f : "";
        return message;
    },
};
function createBaseMsgToggleInflationResponse() {
    return {};
}
exports.MsgToggleInflationResponse = {
    encode(_, writer = minimal_1.default.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgToggleInflationResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.MsgToggleInflationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(_) {
        const message = createBaseMsgToggleInflationResponse();
        return message;
    },
};
function createBaseMsgEditInflationParamsResponse() {
    return {};
}
exports.MsgEditInflationParamsResponse = {
    encode(_, writer = minimal_1.default.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgEditInflationParamsResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.MsgEditInflationParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(_) {
        const message = createBaseMsgEditInflationParamsResponse();
        return message;
    },
};
function createBaseMsgBurn() {
    return { sender: "", coin: undefined };
}
exports.MsgBurn = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.sender !== "") {
            writer.uint32(10).string(message.sender);
        }
        if (message.coin !== undefined) {
            coin_1.Coin.encode(message.coin, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgBurn();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.sender = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.coin = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            sender: isSet(object.sender) ? String(object.sender) : "",
            coin: isSet(object.coin) ? coin_1.Coin.fromJSON(object.coin) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        message.sender !== undefined && (obj.sender = message.sender);
        message.coin !== undefined && (obj.coin = message.coin ? coin_1.Coin.toJSON(message.coin) : undefined);
        return obj;
    },
    create(base) {
        return exports.MsgBurn.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseMsgBurn();
        message.sender = (_a = object.sender) !== null && _a !== void 0 ? _a : "";
        message.coin = (object.coin !== undefined && object.coin !== null) ? coin_1.Coin.fromPartial(object.coin) : undefined;
        return message;
    },
};
function createBaseMsgBurnResponse() {
    return {};
}
exports.MsgBurnResponse = {
    encode(_, writer = minimal_1.default.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgBurnResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    create(base) {
        return exports.MsgBurnResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(_) {
        const message = createBaseMsgBurnResponse();
        return message;
    },
};
exports.MsgServiceName = "nibiru.inflation.v1.Msg";
class MsgClientImpl {
    constructor(rpc, opts) {
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.ToggleInflation = this.ToggleInflation.bind(this);
        this.EditInflationParams = this.EditInflationParams.bind(this);
    }
    ToggleInflation(request) {
        const data = exports.MsgToggleInflation.encode(request).finish();
        const promise = this.rpc.request(this.service, "ToggleInflation", data);
        return promise.then((data) => exports.MsgToggleInflationResponse.decode(minimal_1.default.Reader.create(data)));
    }
    EditInflationParams(request) {
        const data = exports.MsgEditInflationParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "EditInflationParams", data);
        return promise.then((data) => exports.MsgEditInflationParamsResponse.decode(minimal_1.default.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=tx.js.map