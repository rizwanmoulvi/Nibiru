import _m0 from "protobufjs/minimal";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
import { InflationDistribution } from "./inflation";
/** MsgToggleInflation defines a message to enable or disable inflation. */
export interface MsgToggleInflation {
    sender: string;
    enable: boolean;
}
export interface MsgEditInflationParams {
    sender: string;
    inflationEnabled: boolean;
    polynomialFactors: string[];
    inflationDistribution?: InflationDistribution;
    epochsPerPeriod: string;
    periodsPerYear: string;
    maxPeriod: string;
}
export interface MsgToggleInflationResponse {
}
export interface MsgEditInflationParamsResponse {
}
/** MsgBurn: allows burning of any token */
export interface MsgBurn {
    sender: string;
    coin?: Coin;
}
export interface MsgBurnResponse {
}
export declare const MsgToggleInflation: {
    encode(message: MsgToggleInflation, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgToggleInflation;
    fromJSON(object: any): MsgToggleInflation;
    toJSON(message: MsgToggleInflation): unknown;
    create<I extends {
        sender?: string | undefined;
        enable?: boolean | undefined;
    } & {
        sender?: string | undefined;
        enable?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof MsgToggleInflation>]: never; }>(base?: I | undefined): MsgToggleInflation;
    fromPartial<I_1 extends {
        sender?: string | undefined;
        enable?: boolean | undefined;
    } & {
        sender?: string | undefined;
        enable?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof MsgToggleInflation>]: never; }>(object: I_1): MsgToggleInflation;
};
export declare const MsgEditInflationParams: {
    encode(message: MsgEditInflationParams, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgEditInflationParams;
    fromJSON(object: any): MsgEditInflationParams;
    toJSON(message: MsgEditInflationParams): unknown;
    create<I extends {
        sender?: string | undefined;
        inflationEnabled?: boolean | undefined;
        polynomialFactors?: string[] | undefined;
        inflationDistribution?: {
            stakingRewards?: string | undefined;
            communityPool?: string | undefined;
            strategicReserves?: string | undefined;
        } | undefined;
        epochsPerPeriod?: string | undefined;
        periodsPerYear?: string | undefined;
        maxPeriod?: string | undefined;
    } & {
        sender?: string | undefined;
        inflationEnabled?: boolean | undefined;
        polynomialFactors?: (string[] & string[] & { [K in Exclude<keyof I["polynomialFactors"], keyof string[]>]: never; }) | undefined;
        inflationDistribution?: ({
            stakingRewards?: string | undefined;
            communityPool?: string | undefined;
            strategicReserves?: string | undefined;
        } & {
            stakingRewards?: string | undefined;
            communityPool?: string | undefined;
            strategicReserves?: string | undefined;
        } & { [K_1 in Exclude<keyof I["inflationDistribution"], keyof InflationDistribution>]: never; }) | undefined;
        epochsPerPeriod?: string | undefined;
        periodsPerYear?: string | undefined;
        maxPeriod?: string | undefined;
    } & { [K_2 in Exclude<keyof I, keyof MsgEditInflationParams>]: never; }>(base?: I | undefined): MsgEditInflationParams;
    fromPartial<I_1 extends {
        sender?: string | undefined;
        inflationEnabled?: boolean | undefined;
        polynomialFactors?: string[] | undefined;
        inflationDistribution?: {
            stakingRewards?: string | undefined;
            communityPool?: string | undefined;
            strategicReserves?: string | undefined;
        } | undefined;
        epochsPerPeriod?: string | undefined;
        periodsPerYear?: string | undefined;
        maxPeriod?: string | undefined;
    } & {
        sender?: string | undefined;
        inflationEnabled?: boolean | undefined;
        polynomialFactors?: (string[] & string[] & { [K_3 in Exclude<keyof I_1["polynomialFactors"], keyof string[]>]: never; }) | undefined;
        inflationDistribution?: ({
            stakingRewards?: string | undefined;
            communityPool?: string | undefined;
            strategicReserves?: string | undefined;
        } & {
            stakingRewards?: string | undefined;
            communityPool?: string | undefined;
            strategicReserves?: string | undefined;
        } & { [K_4 in Exclude<keyof I_1["inflationDistribution"], keyof InflationDistribution>]: never; }) | undefined;
        epochsPerPeriod?: string | undefined;
        periodsPerYear?: string | undefined;
        maxPeriod?: string | undefined;
    } & { [K_5 in Exclude<keyof I_1, keyof MsgEditInflationParams>]: never; }>(object: I_1): MsgEditInflationParams;
};
export declare const MsgToggleInflationResponse: {
    encode(_: MsgToggleInflationResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgToggleInflationResponse;
    fromJSON(_: any): MsgToggleInflationResponse;
    toJSON(_: MsgToggleInflationResponse): unknown;
    create<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(base?: I | undefined): MsgToggleInflationResponse;
    fromPartial<I_1 extends {} & {} & { [K_1 in Exclude<keyof I_1, never>]: never; }>(_: I_1): MsgToggleInflationResponse;
};
export declare const MsgEditInflationParamsResponse: {
    encode(_: MsgEditInflationParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgEditInflationParamsResponse;
    fromJSON(_: any): MsgEditInflationParamsResponse;
    toJSON(_: MsgEditInflationParamsResponse): unknown;
    create<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(base?: I | undefined): MsgEditInflationParamsResponse;
    fromPartial<I_1 extends {} & {} & { [K_1 in Exclude<keyof I_1, never>]: never; }>(_: I_1): MsgEditInflationParamsResponse;
};
export declare const MsgBurn: {
    encode(message: MsgBurn, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgBurn;
    fromJSON(object: any): MsgBurn;
    toJSON(message: MsgBurn): unknown;
    create<I extends {
        sender?: string | undefined;
        coin?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
    } & {
        sender?: string | undefined;
        coin?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K in Exclude<keyof I["coin"], keyof Coin>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, keyof MsgBurn>]: never; }>(base?: I | undefined): MsgBurn;
    fromPartial<I_1 extends {
        sender?: string | undefined;
        coin?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
    } & {
        sender?: string | undefined;
        coin?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_2 in Exclude<keyof I_1["coin"], keyof Coin>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof MsgBurn>]: never; }>(object: I_1): MsgBurn;
};
export declare const MsgBurnResponse: {
    encode(_: MsgBurnResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgBurnResponse;
    fromJSON(_: any): MsgBurnResponse;
    toJSON(_: MsgBurnResponse): unknown;
    create<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(base?: I | undefined): MsgBurnResponse;
    fromPartial<I_1 extends {} & {} & { [K_1 in Exclude<keyof I_1, never>]: never; }>(_: I_1): MsgBurnResponse;
};
export interface Msg {
    /** ToggleInflation defines a method to enable or disable inflation. */
    ToggleInflation(request: MsgToggleInflation): Promise<MsgToggleInflationResponse>;
    /** EditInflationParams defines a method to edit the inflation params. */
    EditInflationParams(request: MsgEditInflationParams): Promise<MsgEditInflationParamsResponse>;
}
export declare const MsgServiceName = "nibiru.inflation.v1.Msg";
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    ToggleInflation(request: MsgToggleInflation): Promise<MsgToggleInflationResponse>;
    EditInflationParams(request: MsgEditInflationParams): Promise<MsgEditInflationParamsResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=tx.d.ts.map