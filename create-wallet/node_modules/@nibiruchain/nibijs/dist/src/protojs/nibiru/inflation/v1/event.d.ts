import _m0 from "protobufjs/minimal";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
/**
 * EventInflationDistribution: Emitted when NIBI tokens are minted on the
 * network based on Nibiru's inflation schedule.
 */
export interface EventInflationDistribution {
    stakingRewards?: Coin;
    strategicReserve?: Coin;
    communityPool?: Coin;
}
export declare const EventInflationDistribution: {
    encode(message: EventInflationDistribution, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventInflationDistribution;
    fromJSON(object: any): EventInflationDistribution;
    toJSON(message: EventInflationDistribution): unknown;
    create<I extends {
        stakingRewards?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        strategicReserve?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        communityPool?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
    } & {
        stakingRewards?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K in Exclude<keyof I["stakingRewards"], keyof Coin>]: never; }) | undefined;
        strategicReserve?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_1 in Exclude<keyof I["strategicReserve"], keyof Coin>]: never; }) | undefined;
        communityPool?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_2 in Exclude<keyof I["communityPool"], keyof Coin>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, keyof EventInflationDistribution>]: never; }>(base?: I | undefined): EventInflationDistribution;
    fromPartial<I_1 extends {
        stakingRewards?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        strategicReserve?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        communityPool?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
    } & {
        stakingRewards?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_4 in Exclude<keyof I_1["stakingRewards"], keyof Coin>]: never; }) | undefined;
        strategicReserve?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_5 in Exclude<keyof I_1["strategicReserve"], keyof Coin>]: never; }) | undefined;
        communityPool?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_6 in Exclude<keyof I_1["communityPool"], keyof Coin>]: never; }) | undefined;
    } & { [K_7 in Exclude<keyof I_1, keyof EventInflationDistribution>]: never; }>(object: I_1): EventInflationDistribution;
};
//# sourceMappingURL=event.d.ts.map