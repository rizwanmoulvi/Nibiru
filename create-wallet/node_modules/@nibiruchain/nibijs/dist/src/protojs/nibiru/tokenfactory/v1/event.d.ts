import _m0 from "protobufjs/minimal";
import { Metadata } from "../../../cosmos/bank/v1beta1/bank";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
export interface EventCreateDenom {
    denom: string;
    creator: string;
}
export interface EventChangeAdmin {
    denom: string;
    newAdmin: string;
    oldAdmin: string;
}
export interface EventMint {
    coin?: Coin;
    toAddr: string;
    caller: string;
}
export interface EventBurn {
    coin?: Coin;
    fromAddr: string;
    caller: string;
}
export interface EventSetDenomMetadata {
    denom: string;
    /**
     * Metadata: Official x/bank metadata for the denom. All token factory denoms
     * are standard, native assets. The "metadata.base" is the denom.
     */
    metadata?: Metadata;
    caller: string;
}
export declare const EventCreateDenom: {
    encode(message: EventCreateDenom, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventCreateDenom;
    fromJSON(object: any): EventCreateDenom;
    toJSON(message: EventCreateDenom): unknown;
    create<I extends {
        denom?: string | undefined;
        creator?: string | undefined;
    } & {
        denom?: string | undefined;
        creator?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventCreateDenom>]: never; }>(base?: I | undefined): EventCreateDenom;
    fromPartial<I_1 extends {
        denom?: string | undefined;
        creator?: string | undefined;
    } & {
        denom?: string | undefined;
        creator?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventCreateDenom>]: never; }>(object: I_1): EventCreateDenom;
};
export declare const EventChangeAdmin: {
    encode(message: EventChangeAdmin, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventChangeAdmin;
    fromJSON(object: any): EventChangeAdmin;
    toJSON(message: EventChangeAdmin): unknown;
    create<I extends {
        denom?: string | undefined;
        newAdmin?: string | undefined;
        oldAdmin?: string | undefined;
    } & {
        denom?: string | undefined;
        newAdmin?: string | undefined;
        oldAdmin?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventChangeAdmin>]: never; }>(base?: I | undefined): EventChangeAdmin;
    fromPartial<I_1 extends {
        denom?: string | undefined;
        newAdmin?: string | undefined;
        oldAdmin?: string | undefined;
    } & {
        denom?: string | undefined;
        newAdmin?: string | undefined;
        oldAdmin?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventChangeAdmin>]: never; }>(object: I_1): EventChangeAdmin;
};
export declare const EventMint: {
    encode(message: EventMint, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventMint;
    fromJSON(object: any): EventMint;
    toJSON(message: EventMint): unknown;
    create<I extends {
        coin?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        toAddr?: string | undefined;
        caller?: string | undefined;
    } & {
        coin?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K in Exclude<keyof I["coin"], keyof Coin>]: never; }) | undefined;
        toAddr?: string | undefined;
        caller?: string | undefined;
    } & { [K_1 in Exclude<keyof I, keyof EventMint>]: never; }>(base?: I | undefined): EventMint;
    fromPartial<I_1 extends {
        coin?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        toAddr?: string | undefined;
        caller?: string | undefined;
    } & {
        coin?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_2 in Exclude<keyof I_1["coin"], keyof Coin>]: never; }) | undefined;
        toAddr?: string | undefined;
        caller?: string | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof EventMint>]: never; }>(object: I_1): EventMint;
};
export declare const EventBurn: {
    encode(message: EventBurn, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventBurn;
    fromJSON(object: any): EventBurn;
    toJSON(message: EventBurn): unknown;
    create<I extends {
        coin?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        fromAddr?: string | undefined;
        caller?: string | undefined;
    } & {
        coin?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K in Exclude<keyof I["coin"], keyof Coin>]: never; }) | undefined;
        fromAddr?: string | undefined;
        caller?: string | undefined;
    } & { [K_1 in Exclude<keyof I, keyof EventBurn>]: never; }>(base?: I | undefined): EventBurn;
    fromPartial<I_1 extends {
        coin?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
        fromAddr?: string | undefined;
        caller?: string | undefined;
    } & {
        coin?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_2 in Exclude<keyof I_1["coin"], keyof Coin>]: never; }) | undefined;
        fromAddr?: string | undefined;
        caller?: string | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof EventBurn>]: never; }>(object: I_1): EventBurn;
};
export declare const EventSetDenomMetadata: {
    encode(message: EventSetDenomMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventSetDenomMetadata;
    fromJSON(object: any): EventSetDenomMetadata;
    toJSON(message: EventSetDenomMetadata): unknown;
    create<I extends {
        denom?: string | undefined;
        metadata?: {
            description?: string | undefined;
            denomUnits?: {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[] | undefined;
            base?: string | undefined;
            display?: string | undefined;
            name?: string | undefined;
            symbol?: string | undefined;
            uri?: string | undefined;
            uriHash?: string | undefined;
        } | undefined;
        caller?: string | undefined;
    } & {
        denom?: string | undefined;
        metadata?: ({
            description?: string | undefined;
            denomUnits?: {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[] | undefined;
            base?: string | undefined;
            display?: string | undefined;
            name?: string | undefined;
            symbol?: string | undefined;
            uri?: string | undefined;
            uriHash?: string | undefined;
        } & {
            description?: string | undefined;
            denomUnits?: ({
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[] & ({
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            } & {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: (string[] & string[] & { [K in Exclude<keyof I["metadata"]["denomUnits"][number]["aliases"], keyof string[]>]: never; }) | undefined;
            } & { [K_1 in Exclude<keyof I["metadata"]["denomUnits"][number], keyof import("../../../cosmos/bank/v1beta1/bank").DenomUnit>]: never; })[] & { [K_2 in Exclude<keyof I["metadata"]["denomUnits"], keyof {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[]>]: never; }) | undefined;
            base?: string | undefined;
            display?: string | undefined;
            name?: string | undefined;
            symbol?: string | undefined;
            uri?: string | undefined;
            uriHash?: string | undefined;
        } & { [K_3 in Exclude<keyof I["metadata"], keyof Metadata>]: never; }) | undefined;
        caller?: string | undefined;
    } & { [K_4 in Exclude<keyof I, keyof EventSetDenomMetadata>]: never; }>(base?: I | undefined): EventSetDenomMetadata;
    fromPartial<I_1 extends {
        denom?: string | undefined;
        metadata?: {
            description?: string | undefined;
            denomUnits?: {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[] | undefined;
            base?: string | undefined;
            display?: string | undefined;
            name?: string | undefined;
            symbol?: string | undefined;
            uri?: string | undefined;
            uriHash?: string | undefined;
        } | undefined;
        caller?: string | undefined;
    } & {
        denom?: string | undefined;
        metadata?: ({
            description?: string | undefined;
            denomUnits?: {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[] | undefined;
            base?: string | undefined;
            display?: string | undefined;
            name?: string | undefined;
            symbol?: string | undefined;
            uri?: string | undefined;
            uriHash?: string | undefined;
        } & {
            description?: string | undefined;
            denomUnits?: ({
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[] & ({
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            } & {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: (string[] & string[] & { [K_5 in Exclude<keyof I_1["metadata"]["denomUnits"][number]["aliases"], keyof string[]>]: never; }) | undefined;
            } & { [K_6 in Exclude<keyof I_1["metadata"]["denomUnits"][number], keyof import("../../../cosmos/bank/v1beta1/bank").DenomUnit>]: never; })[] & { [K_7 in Exclude<keyof I_1["metadata"]["denomUnits"], keyof {
                denom?: string | undefined;
                exponent?: number | undefined;
                aliases?: string[] | undefined;
            }[]>]: never; }) | undefined;
            base?: string | undefined;
            display?: string | undefined;
            name?: string | undefined;
            symbol?: string | undefined;
            uri?: string | undefined;
            uriHash?: string | undefined;
        } & { [K_8 in Exclude<keyof I_1["metadata"], keyof Metadata>]: never; }) | undefined;
        caller?: string | undefined;
    } & { [K_9 in Exclude<keyof I_1, keyof EventSetDenomMetadata>]: never; }>(object: I_1): EventSetDenomMetadata;
};
//# sourceMappingURL=event.d.ts.map