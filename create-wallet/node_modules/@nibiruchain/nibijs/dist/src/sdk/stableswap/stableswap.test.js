"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const bignumber_js_1 = require("bignumber.js");
const _1 = require(".");
describe("stableswap tests", () => {
    test("stabletests", () => {
        const csv = fs_1.default
            .readFileSync(path_1.default.resolve(__dirname, path_1.default.join("mocks", "stabletests.csv")))
            .toString();
        const rl = csv.substring(0, csv.length - 1).split("\n");
        rl.forEach((line) => {
            const regex = /"(\[[^"]+\])",(\d+),(\d+),(\d+),(\d+(\.\d+)?),(\d+(\.\d+)?)/;
            const match = line.match(regex);
            if (!match) {
                console.error(new Error("Invalid line format"));
                return;
            }
            const balances = JSON.parse(match[1]);
            const amplification = (0, bignumber_js_1.BigNumber)(match[2]);
            const send = parseFloat(match[3]);
            const recv = parseFloat(match[4]);
            const dx = (0, bignumber_js_1.BigNumber)(match[5]);
            const expectedDy = (0, bignumber_js_1.BigNumber)(match[7]);
            const curveModel = new _1.StableSwap(amplification, balances, (0, bignumber_js_1.BigNumber)(0));
            const dy = curveModel.exchange(send, recv, dx);
            expect(dy.minus(expectedDy).abs().isLessThanOrEqualTo((0, bignumber_js_1.BigNumber)(1))).toEqual(true);
        });
    });
    test("Stableswap failure", () => {
        const balances = [(0, bignumber_js_1.BigNumber)(0), (0, bignumber_js_1.BigNumber)(0)];
        const amplification = (0, bignumber_js_1.BigNumber)(0);
        const curveModel = new _1.StableSwap(amplification, balances, (0, bignumber_js_1.BigNumber)(0));
        expect(curveModel.exchange(0, 1, (0, bignumber_js_1.BigNumber)(0))).toEqual((0, bignumber_js_1.BigNumber)(0));
    });
});
//# sourceMappingURL=stableswap.test.js.map