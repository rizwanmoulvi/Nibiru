import { Block } from "@cosmjs/stargate";
import { Chain, ABCIEvent } from "..";
/** Mnemonic for the wallet of the default validator on localnet" */
export declare const TEST_MNEMONIC: string;
/** Address for the wallet of the default validator on localnet" */
export declare const TEST_ADDRESS: string;
export declare const ERR: {
    collections: string;
    sequence: string;
    noPrices: string;
};
/** Validates that block queried via the JSON RPC client has the expected fields. */
export declare function assertValidBlockFromJsonRpc(blockJson: {
    [key: string]: unknown;
}): void;
/** assertValidBlock: Performs runtime type validation on a CometBFT "Block". */
export declare function assertValidBlock(block: Block, chain: Chain): void;
/**
 * Asserts that a list of ABCIEvents contains a specific type of `TxMsg`. This
 * `TxMsg` type is read from a "message" event's "action" attribute.
 *
 * @param {string} msgType - TxMsg type to look for within the event attributes.
 * @param {ABCIEvent[]} events - set of events over which we're searching.
 */
export declare function assertHasMsgType(msgType: string, events: ABCIEvent[]): void;
/**
 * Asserts that an array of ABCIEvent objects contains an event with a specified
 * type. This runs a test expectation that the specified `eventType` is
 * contained in `events`.
 *
 * @param {string} eventType - The event type to look for in the array of events.
 * @param {ABCIEvent[]} events - An array of ABCIEvent objects to be tested.
 */
export declare function assertHasEventType(eventType: string, events: ABCIEvent[]): void;
/**
 * Asserts that the given error matches one of the expected error messages.
 *
 * This function parses the error object to extract its message and checks if
 * it includes any of the specified acceptable error messages. It sets a test
 * expectation that the error message is contained within the list of acceptable errors.
 *
 * @param {unknown} err - The error object to be tested.
 * @param {string[]} okErrors - An array of acceptable error message strings.
 */
export declare const assertExpectedError: (err: unknown, okErrors: string[]) => void;
//# sourceMappingURL=testutil.d.ts.map