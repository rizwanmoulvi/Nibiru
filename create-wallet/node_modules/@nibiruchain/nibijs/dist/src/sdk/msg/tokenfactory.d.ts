import { QueryClient } from "@cosmjs/stargate";
import { MsgCreateDenom, MsgCreateDenomResponse, MsgChangeAdmin, MsgChangeAdminResponse, MsgUpdateModuleParams, MsgUpdateModuleParamsResponse, MsgBurn, MsgBurnResponse, MsgMint, MsgMintResponse, MsgSetDenomMetadata, MsgSetDenomMetadataResponse, MsgBurnNative, MsgBurnNativeResponse } from "../../protojs/nibiru/tokenfactory/v1/tx";
export interface TokenFactoryMsgExtension {
    readonly tokenFactoryMsg: Readonly<{
        createDenom: (body: MsgCreateDenom) => Promise<MsgCreateDenomResponse>;
        changeAdmin: (body: MsgChangeAdmin) => Promise<MsgChangeAdminResponse>;
        updateModuleParams: (body: MsgUpdateModuleParams) => Promise<MsgUpdateModuleParamsResponse>;
        mint: (body: MsgMint) => Promise<MsgMintResponse>;
        burn: (body: MsgBurn) => Promise<MsgBurnResponse>;
        setDenomMetadata: (body: MsgSetDenomMetadata) => Promise<MsgSetDenomMetadataResponse>;
        burnNative: (body: MsgBurnNative) => Promise<MsgBurnNativeResponse>;
    }>;
}
export declare const setupTokenFactoryMsgExtension: (base: QueryClient) => TokenFactoryMsgExtension;
//# sourceMappingURL=tokenfactory.d.ts.map