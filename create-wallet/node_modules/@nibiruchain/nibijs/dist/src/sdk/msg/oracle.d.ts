import { QueryClient } from "@cosmjs/stargate";
import { MsgAggregateExchangeRatePrevote, MsgAggregateExchangeRatePrevoteResponse, MsgAggregateExchangeRateVote, MsgAggregateExchangeRateVoteResponse, MsgDelegateFeedConsent, MsgDelegateFeedConsentResponse, MsgEditOracleParams, MsgEditOracleParamsResponse } from "../../protojs/nibiru/oracle/v1/tx";
export interface OracleMsgExtension {
    readonly oracleMsg: Readonly<{
        aggregateExchangeRatePrevote: (body: MsgAggregateExchangeRatePrevote) => Promise<MsgAggregateExchangeRatePrevoteResponse>;
        aggregateExchangeRateVote: (body: MsgAggregateExchangeRateVote) => Promise<MsgAggregateExchangeRateVoteResponse>;
        delegateFeedConsent: (body: MsgDelegateFeedConsent) => Promise<MsgDelegateFeedConsentResponse>;
        editOracleParams: (body: MsgEditOracleParams) => Promise<MsgEditOracleParamsResponse>;
    }>;
}
export declare const setupOracleMsgExtension: (base: QueryClient) => OracleMsgExtension;
//# sourceMappingURL=oracle.d.ts.map