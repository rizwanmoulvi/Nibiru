"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseEventLogs = exports.findEvent = exports.eventToMap = void 0;
/** eventToMap: Converts an ABCIEvent into an EventMap. */
const eventToMap = (event) => {
    const eventMap = { type: event.type };
    event.attributes.forEach((attr) => {
        eventMap[attr.key] = attr.value;
    });
    return eventMap;
};
exports.eventToMap = eventToMap;
/** findEvent: Filter 'events' by type. This is useful for checking if
 * events of known type are present. */
const findEvent = (events, eventType) => events.find((e) => e.type === eventType);
exports.findEvent = findEvent;
/** parseEventLogs: Returns a mutable and typed version of the events payload
 * from a tx response.
 *
 * @example
 * let txResp: DeliverTxResponse // assume this is given
 * const eventLogs = parseEventLogs(txResp)
 *
 * */
const parseEventLogs = (txResp) => txResp.events.map(exports.eventToMap);
exports.parseEventLogs = parseEventLogs;
//# sourceMappingURL=event.js.map