"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
const wasmEventType = "wasm-tranfer-event";
const eventAttributes = [{ key: "key", value: "value" }];
const wasmEvent = {
    type: wasmEventType,
    attributes: eventAttributes,
};
const mockEvent = {
    type: "mock-event",
    attributes: eventAttributes,
};
describe("event tests", () => {
    test("eventToMap", () => {
        const result = (0, _1.eventToMap)(wasmEvent);
        expect(result).toEqual({
            key: "value",
            type: wasmEventType,
        });
    });
    test("findEvent", () => {
        const result = (0, _1.findEvent)([wasmEvent, mockEvent], wasmEventType);
        expect(result).toEqual(wasmEvent);
    });
    test("parseEventLogs", () => {
        const result = (0, _1.parseEventLogs)({
            events: [wasmEvent],
            height: 0,
            transactionHash: "",
            txIndex: 0,
            code: 0,
            gasUsed: BigInt(0),
            gasWanted: BigInt(0),
            msgResponses: [],
        });
        expect(result).toEqual([(0, _1.eventToMap)(wasmEvent)]);
    });
});
//# sourceMappingURL=event.test.js.map